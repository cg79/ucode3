1. write a function to return the n character from a string

var str = "ThinkPad";
var res = str.charAt(3);

function result() {
    return res;
}

console.log(result());


2. WAF (write a function), with 1 parameter x ,  WR (which returns) the char code of character from position x

var str = "Planet";
var res = str.charCodeAt(2);

console.log(res);


3. WAF with 2 params x and y, WR the sum of charcodes from position x and y

var x = "A";
var codeA = x.charCodeAt(0);

var y = "B";
var codeB = y.charCodeAt(0);

function add(x, y) {
    return codeA + codeB;
}

console.log(add(x, y));


4. WAF with 2 params, input (string), x(number), WR the same string with the character from position x as uppercase;

var str = "string";
str.toUpperCase();

5. WAF, (string 1, string 2), WR the indexof string 2 within string 1;

var str = "I don't know what I'm doing";
var res = str.indexOf('what');

console.log(res);



6. WAF, (string 1, string 2), WR the last indexof string 2 within string 1;

var str = "I don't know what I'm doing, but one day I will know";
var res = str.lastIndexOf("know");

console.log(res);


7. WAF, (string) , WR the first 2 characters

var str = "Europe";
var res = str.substr(0, 2);

console.log(res);


8. WAF, (string), WR the characters from position 1 and -1 (previous character from last one)

var str = "This is a string";
var res = str.substring(2, -1);

console.log(res);


9. WAF, (string, start, end), WR the characters between (start and end)

var str = "String";
var res = str.substring(1,5);

console.log(res);



10. WAF (string1, string2), to replace the string2 within string1;


11. WAF(string), WR true if the length is even. (%2 === 0)

function isEven() {
    var str = "This is my function.";
    var n = str.length;
    return n % 2 == 0;
}

console.log(isEven());


12. WAF(string1, s2), WR the sum of lengths of s1 and s2;

function theSumOfStrings() {
    var str1 = "This is a string";
    var l1 = str1.length;
    var str2 = "This is an even longer string";
    var l2 = str2.length;

    return l1 + l2;
}

console.log(theSumOfStrings());


13. WAF(string1, s2), WR true if s1 starts with s2;

function sameWord() {
    var str1 = "This is a string";
    var a = str1.startsWith("This");
    var str2 = "This is an even longer string";
    var b = str2.startsWith("This");

    return a == b;
}

console.log(sameWord());


14.WAF(string, number) to remove the character from position number using slice

function slicing() {
    var str = "string";
    var nr = 16;
    return (str + nr).slice(0, 6);
}

console.log(slicing());


15.WAF (string, string) WR the number of aparition of string 2 whithin string1.

16. create an array

var cars = ["ford", "toyota", "hyundai"];


17. WAF to add a string into array

function carBrands() {
    var cars = ["ford", "toyota", "hyundai"];
    cars.push("honda");
    return cars;
    
}

console.log(carBrands());

18. WAF (arr, string) to add string into array on position 0;

function carBrands() {
    var cars = ["ford", "toyota", "hyundai"];
    cars.unshift("volvo");
    return cars;
}

console.log(carBrands());


19. WAF (arr, number) to add the number into array

function carBrands() {
    var cars = ["ford", "toyota", "hyundai"];
    var number= [3];
    var carNumber = cars.concat(number);
    return carNumber;
}

console.log(carBrands());


20; WAF (arr) WR the last element from array

function carBrands() {
    var cars = ["ford", "toyota", "hyundai"];
    return cars[2];
    
}

console.log(carBrands());


21; WAF (string) WR the characters from string as array

function stringSplit() {
    var string = "HELLO";
    return string.split("");
}

console.log(stringSplit());


22. WAF (arr) WR the reversed array

function carBrands() {
    var cars = ["ford", "toyota", "hyundai"];
    return cars.reverse();
    
}

console.log(carBrands());


23. WAF (string) to return the inversed string. ex: abc ==> cba

function inversedString() {
    var str = "HELLO";
    var splitting = str.split("");
    var reversing = splitting.reverse("");
    var joining = reversing.join("");
    return joining;
}

console.log(inversedString());


24. WAF (arr, x) to remove the value from position x from array

function numbers() {
    var arr = [3,6,9,12];
    arr.splice(3, 1);
    return arr;
}

console.log(numbers());

25. WAF (arr, x) WR true if there is any value equal x into the array

function carBrands() {
    var cars = ["ford", "toyota", "hyundai"];
    var x = "toyota";
    return x == cars[1];
    
}

console.log(carBrands());


26. WAF (arr, y) WR an array containing all the values except y

function carBrands() {
    var cars = ["ford", "toyota", "hyundai"];
    cars.pop(1);
    return cars;
    
}

console.log(carBrands());


27. WAF (arr) of numbers which returns the sorted array;

function numbers() {
    var arr = [7, 2,5,8,1];
    return arr.sort();
    
}

console.log(numbers());


28. WAF (arr) WR the rotated array (1 time)


29. WAF (arr) of numbers WR another array which contains the squared values; [1,2,3] ==> [1,4,9]


30. WAF (r: number) WR the  surface of a circle having the raduis equal r;


31. WAF (arr) which prints to the console the value from the array (one by one)

var cars = ["ford", "toyota", "hyundai"];
cars.forEach(function(carBrands){
    console.log(carBrands);
})

32. WAF writeToConsole(value) which prints the value to the console;


33. WAF (arr1, arr2) which returns another array with elements from arr1 and arr2;

function carBrands() {
    var cars1 = ["ford" , "toyota", "hyundai"];
    var cars2 = ["honda", "volvo", "fiat"];
    var cars = cars1.concat(cars2);
    return cars;
}

console.log(carBrands());


34; WAF (arr, position) (arr) contains strings, which replace the element from position x with the inversed value; ex: ['ana', 'xy'], 1 ==> ["ana", "yx"]


35. WAF: (arr, value) WR the position of value into the array

function carBrands() {
    var cars = ["ford", "toyota", "hyundai"];
    return cars.indexOf("hyundai");
}

console.log(carBrands());

36. WAF (n) which returns an array with n elements



37. WAF(string) WR string withowt spaces. ex: "    a    bcd   xyzt    " ==> "abcdxyzt";

var str = "      This Is A String    ";
str.trim();


38. WAF (X) which returns true if x is array

function carBrands() {
    var cars = ["ford", "toyota", "hyundai"];
    return Array.isArray(cars);
    
}

console.log(carBrands());


39. WAF (y) which returns true if y is string;



40. WAF (string, number) which returns the string + number

var str = "String";
var num = 5;
var x = str + num;

console.log(x);


41. WAF WR the inverse value; suppose you have a door; write a function which toggle the state door. isOPEN/isClosed



42. WAF WR the number of miliseconds of your life;



43. WAF WR current date + 2h

function dateTime() {
    var d = new Date();
    d.setHours(d.getHours() + 2);
    return d;
}

console.log(dateTime());


44. WAF WR day of the week of the current date

function dayOfTheWeek() {
    var date = new Date();
    var day = new Array(7);
    day [0] = "Sunday";
    day [1] = "Monday";
    day [2] = "Tuesday";
    day [3] = "Wednesday";
    day [4] = "Thursday";
    day [5] = "Friday";
    day [6] = "Saturday";
    
    var DoW = day[d.getDay()];
    
    return DoW;
}   
    
console.log(dayOfTheWeek());

45. WAF WR 	 the difference between 2 dates


